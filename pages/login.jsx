// components
import Head from "next/head";
import Form from "../components/Form";
import Button from "../components/Button";
import Layout from "../components/Layout";
import Loading from "../components/Loading";

// hooks
import Router from "next/router";
import { useState, useEffect } from "react";

// database
import { prisma } from "../db.ts";

export default function Login({ dataUser }) {
  const users = dataUser;
  useEffect(() => {
    console.log(users);
  }, [users]);
  const [nim, setNIM] = useState("");
  const [password, setPassword] = useState("");

  const [loggedIn, setLoggedIn] = useState(false);
  const [loggedInUser, setLoggedInUser] = useState("");

  const [isLoading, setIsLoading] = useState(false);

  const handleNimChange = (event) => {
    setNIM(event.target.value);
  };

  const handlePasswordChange = (event) => {
    setPassword(event.target.value);
  };

  const handleLogin = (user) => {
    setLoggedIn(!loggedIn);
    setLoggedInUser(user);
  };

  const handleLoading = () => {
    setIsLoading(!isLoading);
  };

  const checkLogin = (users, nimInput, passwordInput) => {
    let handled = false;
    if (loggedIn === false) {
      users.forEach((user) => {
        console.log(nimInput, passwordInput, user);
        if (user.nim === nimInput && user.password === passwordInput) {
          handleLoading();
          handleLogin(JSON.stringify(user));
          handled = true;
          console.log("handled");
        }
      });

      if (handled) {
        return;
      } else {
        alert("NIM atau password yang kamu masukkan salah!");
      }
    } else {
      alert("Already logged in!");
    }
  };

  useEffect(() => {
    if (loggedIn) {
      console.log(loggedInUser);
      console.log("routing...");
      if (!loggedInUser) {
        console.log(loggedInUser);
        return;
      } else {
        Router.replace({
          pathname: "/dashboard",
          query: { user: loggedInUser.trim() },
        });
      }
    }
  }, [loggedIn, loggedInUser]);

  return (
    <>
      <Layout>
        <Head>
          <title>Login | BPA FMIPA&apos;21 ITB</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <Loading loading={isLoading} />
        <div className="flex w-full justify-center items-center mb-8">
          <h1 className={"text-5xl font-bold text-background"}>LOG IN</h1>
        </div>
        <Form
          divClass={"flex flex-col w-full justify-center items-center"}
          id={"nim"}
          label={"NIM TPB"}
          type={"text"}
          placeholder={"00021000"}
          onChange={handleNimChange}
        />
        <Form
          divClass={"flex flex-col w-full justify-center items-center"}
          id={"password"}
          label={"Password"}
          type={"password"}
          placeholder={"Password"}
          onChange={handlePasswordChange}
        />
        <Button
          onClick={() => checkLogin(users, nim, password)}
          content={"LOG IN"}
          textColor={"background"}
        />
      </Layout>
    </>
  );
}

export async function getStaticProps() {
  const dataUser = await prisma.user.findMany();

  return {
    props: {
      dataUser,
    },
  };
}
