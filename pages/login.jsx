// components
import Head from "next/head";
import Form from "../components/Form";
import Button from "../components/Button";

// hooks
import Router from "next/router";
import { useState, useEffect } from "react";

// database
import { prisma } from "../db";

const Login = (dataUser) => {
  const users = dataUser;

  useEffect(() => {
    console.log(users);
  }, [users]);

  const [nim, setNIM] = useState("");
  const [password, setPassword] = useState("");

  const [loggedIn, setLoggedIn] = useState(false);
  const [loggedInUser, setLoggedInUser] = useState("");

  const handleNimChange = (event) => {
    setNIM(event.target.value);
  };

  const handlePasswordChange = (event) => {
    setPassword(event.target.value);
  };

  const handleLogin = (user) => {
    setLoggedIn(!loggedIn);
    setLoggedInUser(user);
  };

  const checkLogin = (users, nimInput, passwordInput) => {
    let handled = false;
    if (loggedIn === false) {
      users.forEach((user) => {
        console.log(nimInput, passwordInput, user);
        if (user.nim === nimInput && user.password === passwordInput) {
          let userCopy = user;
          delete userCopy.password;
          handleLogin(JSON.stringify(userCopy));
          handled = true;
          console.log("handled");
        }
      });

      if (handled) {
        return;
      } else {
        alert("Data tidak ditemukan!");
      }
    } else {
      alert("Already logged in!");
    }
  };

  useEffect(() => {
    if (loggedIn) {
      console.log(loggedInUser);
      console.log("routing...");
      if (!loggedInUser) {
        console.log(loggedInUser);
        return;
      } else {
        Router.push({
          pathname: "/dashboard",
          query: { user: loggedInUser.trim() },
        });
      }
    }
  }, [loggedIn, loggedInUser]);

  return (
    <>
      <Head>
        <title>Login | BPA FMIPA&apos;21 ITB</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex w-full justify-center items-center mb-8">
        <h1 className={"text-5xl font-bold text-background"}>LOG IN</h1>
      </div>
      <Form
        divClass={"flex flex-col w-full justify-center items-center"}
        id={"nim"}
        label={"NIM TPB"}
        type={"text"}
        placeholder={"10121000"}
        onChange={handleNimChange}
      />
      <Form
        divClass={"flex flex-col w-full justify-center items-center"}
        id={"password"}
        label={"Password"}
        type={"password"}
        placeholder={"Password"}
        onChange={handlePasswordChange}
      />
      <Button
        onClick={() => checkLogin(users, nim, password)}
        content={"LOG IN"}
        textColor={"background"}
      />
    </>
  );
};

export default Login;

export async function getStaticProps() {
  const dataUser = await prisma.user.findMany();

  return {
    props: {
      dataUser,
    },
  };
}
